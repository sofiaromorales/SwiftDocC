{"primaryContentSections":[{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"DocC is, generally speaking, performing a sequence of operations on a set of documentation topics. Since the compilaton is a pipeline, you mostly do work serially as each stage’s input is the previous stage’s output."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"When working serially becomes a bottleneck, use a suitable method from a small number of "},{"type":"codeVoice","code":"Collection"},{"type":"text","text":" extensions that synchronously perform concurrent work on multiple threads but keep the complexity of your code manageable."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The preferred way to concurrently perform work is to have a function called from within the main queue, perform concurrent operations inside the function, and return the aggregated results, keeping the concurrency within the local scope of the function."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"When you would like to concurrently perform work on a collection of inputs you have a choice between:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Collection.concurrentPerform(batches:block:)"},{"type":"text","text":" concurrently perform a block of code over the collection elements. A concurrent alternative to "},{"type":"codeVoice","code":"Collection.forEach(_:)"},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Collection.concurrentPerform(batches:block:) -> [Result]"},{"type":"text","text":" concurrently perform a block over the collection elements and optionally return an arbitrary amount of results returned in no particular order."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Collection.concurrentMap(batches:block:) -> [Result]"},{"type":"text","text":" concurrently convert the collection elements; the returned results are in the collection’s original order. A concurrent alternative to "},{"type":"codeVoice","code":"Collection.map(_:)"},{"type":"text","text":"."}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To concurrently convert a set of elements and preserve the order in the results use:"}]},{"type":"codeListing","syntax":"swift","code":["let results: [Int] = [1, 2, 3, 4].concurrentMap {","  return $0 * 2","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To return an arbitrary amount of results in no particular order use:"}]},{"type":"codeListing","syntax":"swift","code":["let errors: [Error] = [1, 2, 3, 4].concurrentPerform { element, results in","  if element % 2 == 0 {","    results.append(MyError.evenInput)","  }","}"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/swiftdocc\/concurrency"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/org.swift.SwiftDocC\/documentation\/SwiftDocC\/Concurrency","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Perform concurrent work on the DocC model."}],"kind":"article","metadata":{"roleHeading":"Article","title":"Concurrency","role":"article","modules":[{"name":"SwiftDocC"}]},"hierarchy":{"paths":[["doc:\/\/org.swift.SwiftDocC\/documentation\/SwiftDocC"]]},"seeAlsoSections":[{"title":"Utilities and Communication","identifiers":["doc:\/\/org.swift.SwiftDocC\/documentation\/SwiftDocC\/Utilities","doc:\/\/org.swift.SwiftDocC\/documentation\/SwiftDocC\/Communication"],"generated":true}],"references":{"doc://org.swift.SwiftDocC/documentation/SwiftDocC":{"role":"collection","title":"SwiftDocC","abstract":[{"type":"text","text":"Combine code comments with markup prose to produce structured, semantic documentation."}],"identifier":"doc:\/\/org.swift.SwiftDocC\/documentation\/SwiftDocC","kind":"symbol","type":"topic","url":"\/documentation\/swiftdocc"},"doc://org.swift.SwiftDocC/documentation/SwiftDocC/Communication":{"role":"collectionGroup","title":"Communication Bridge","abstract":[{"type":"text","text":"Offer native integration of DocC in your IDE."}],"identifier":"doc:\/\/org.swift.SwiftDocC\/documentation\/SwiftDocC\/Communication","kind":"article","type":"topic","url":"\/documentation\/swiftdocc\/communication"},"doc://org.swift.SwiftDocC/documentation/SwiftDocC/Utilities":{"role":"collectionGroup","title":"Utility APIs","abstract":[],"identifier":"doc:\/\/org.swift.SwiftDocC\/documentation\/SwiftDocC\/Utilities","kind":"article","type":"topic","url":"\/documentation\/swiftdocc\/utilities"}}}