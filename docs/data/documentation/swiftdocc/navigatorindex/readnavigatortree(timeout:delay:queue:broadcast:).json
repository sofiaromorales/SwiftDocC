{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"readNavigatorTree"},{"kind":"text","text":"("},{"kind":"externalParam","text":"timeout"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TimeInterval","preciseIdentifier":"c:@T@NSTimeInterval"},{"kind":"text","text":", "},{"kind":"externalParam","text":"delay"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TimeInterval","preciseIdentifier":"c:@T@NSTimeInterval"},{"kind":"text","text":" = 0.01, "},{"kind":"externalParam","text":"queue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"DispatchQueue","preciseIdentifier":"c:objc(cs)OS_dispatch_queue"},{"kind":"text","text":", "},{"kind":"externalParam","text":"broadcast"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/org.swift.SwiftDocC\/documentation\/SwiftDocC\/NavigatorTree","preciseIdentifier":"s:9SwiftDocC13NavigatorTreeC","text":"NavigatorTree"},{"kind":"text","text":"."},{"kind":"typeIdentifier","identifier":"doc:\/\/org.swift.SwiftDocC\/documentation\/SwiftDocC\/NavigatorTree\/BroadcastCallback","preciseIdentifier":"s:9SwiftDocC13NavigatorTreeC17BroadcastCallbacka","text":"BroadcastCallback"},{"kind":"text","text":"?) "},{"kind":"keyword","text":"throws"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"timeout","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The amount of time we can load a batch of items from data, once the timeout time pass,"},{"type":"text","text":" "},{"type":"text","text":"the reading process will reschedule asynchronously using the given queue."}]}]},{"name":"delay","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The delay to wait before schedule the next read. Default: 0.01 seconds."}]}]},{"name":"queue","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The queue to use."}]}]},{"name":"broadcast","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The callback to update get updates of the current process."}]}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Do not access the navigator tree root node or the map from identifier to node from a different thread than the one the queue is using while the read is performed,"},{"type":"text","text":" "},{"type":"text","text":"this may cause data inconsistencies. For that please use the broadcast callback that notifies which items have been loaded."}]}],"type":"aside","name":"Note"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/swiftdocc\/navigatorindex\/readnavigatortree(timeout:delay:queue:broadcast:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/org.swift.SwiftDocC\/documentation\/SwiftDocC\/NavigatorIndex\/readNavigatorTree(timeout:delay:queue:broadcast:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Read a tree on disk from a given path."},{"type":"text","text":" "},{"type":"text","text":"The read is atomically performed, which means it reads all the content of the file from the disk and process the tree from loaded data."},{"type":"text","text":" "},{"type":"text","text":"The queue is used to load the data for a given timeout period, after that, the queue is used to schedule another read after a given delay."},{"type":"text","text":" "},{"type":"text","text":"This approach ensures that the used  queue doesn’t stall while loading the content from the disk keeping the used queue responsive."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"readNavigatorTree"},{"kind":"text","text":"("},{"kind":"externalParam","text":"timeout"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TimeInterval","preciseIdentifier":"c:@T@NSTimeInterval"},{"kind":"text","text":", "},{"kind":"externalParam","text":"delay"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TimeInterval","preciseIdentifier":"c:@T@NSTimeInterval"},{"kind":"text","text":", "},{"kind":"externalParam","text":"queue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"DispatchQueue","preciseIdentifier":"c:objc(cs)OS_dispatch_queue"},{"kind":"text","text":", "},{"kind":"externalParam","text":"broadcast"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NavigatorTree","preciseIdentifier":"s:9SwiftDocC13NavigatorTreeC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"BroadcastCallback","preciseIdentifier":"s:9SwiftDocC13NavigatorTreeC17BroadcastCallbacka"},{"kind":"text","text":"?) "},{"kind":"keyword","text":"throws"}],"title":"readNavigatorTree(timeout:delay:queue:broadcast:)","roleHeading":"Instance Method","role":"symbol","symbolKind":"method","externalID":"s:9SwiftDocC14NavigatorIndexC04readC4Tree7timeout5delay5queue9broadcastySd_SdSo012OS_dispatch_I0CySayAA0cF0C4NodeCG_SbAL5ErrorOSgtcSgtKF","modules":[{"name":"SwiftDocC"}]},"hierarchy":{"paths":[["doc:\/\/org.swift.SwiftDocC\/documentation\/SwiftDocC","doc:\/\/org.swift.SwiftDocC\/documentation\/SwiftDocC\/DocumentationIndexing","doc:\/\/org.swift.SwiftDocC\/documentation\/SwiftDocC\/NavigatorIndex"]]},"references":{"doc://org.swift.SwiftDocC/documentation/SwiftDocC/NavigatorTree/BroadcastCallback":{"role":"symbol","title":"NavigatorTree.BroadcastCallback","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"BroadcastCallback"}],"abstract":[{"type":"text","text":"The broadcast callback notifies a listener about the latest items loaded from the disk."}],"identifier":"doc:\/\/org.swift.SwiftDocC\/documentation\/SwiftDocC\/NavigatorTree\/BroadcastCallback","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"BroadcastCallback"}],"url":"\/documentation\/swiftdocc\/navigatortree\/broadcastcallback"},"doc://org.swift.SwiftDocC/documentation/SwiftDocC/DocumentationIndexing":{"role":"collectionGroup","title":"Documentation Indexing","abstract":[{"type":"text","text":"Create documentation indexes optimized for text search or navigation."}],"identifier":"doc:\/\/org.swift.SwiftDocC\/documentation\/SwiftDocC\/DocumentationIndexing","kind":"article","type":"topic","url":"\/documentation\/swiftdocc\/documentationindexing"},"doc://org.swift.SwiftDocC/documentation/SwiftDocC/NavigatorIndex":{"role":"symbol","title":"NavigatorIndex","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NavigatorIndex"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"NavigatorIndex"},{"type":"text","text":" contains all the necessary information to display the data inside a navigator."},{"type":"text","text":" "},{"type":"text","text":"The data ranges from the tree to the necessary pieces of information to filter the content and perform actions in a fast way."},{"type":"text","text":" "},{"type":"text","text":"A navigator index is created per bundle and needs a bundle identifier to correctly work. Anonymous bundles are allowed, but they limit"},{"type":"text","text":" "},{"type":"text","text":"the functionalities of the index."}],"identifier":"doc:\/\/org.swift.SwiftDocC\/documentation\/SwiftDocC\/NavigatorIndex","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"NavigatorIndex"}],"url":"\/documentation\/swiftdocc\/navigatorindex"},"doc://org.swift.SwiftDocC/documentation/SwiftDocC/NavigatorIndex/readNavigatorTree(timeout:delay:queue:broadcast:)":{"role":"symbol","title":"readNavigatorTree(timeout:delay:queue:broadcast:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"readNavigatorTree"},{"kind":"text","text":"("},{"kind":"externalParam","text":"timeout"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TimeInterval","preciseIdentifier":"c:@T@NSTimeInterval"},{"kind":"text","text":", "},{"kind":"externalParam","text":"delay"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TimeInterval","preciseIdentifier":"c:@T@NSTimeInterval"},{"kind":"text","text":", "},{"kind":"externalParam","text":"queue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"DispatchQueue","preciseIdentifier":"c:objc(cs)OS_dispatch_queue"},{"kind":"text","text":", "},{"kind":"externalParam","text":"broadcast"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NavigatorTree","preciseIdentifier":"s:9SwiftDocC13NavigatorTreeC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"BroadcastCallback","preciseIdentifier":"s:9SwiftDocC13NavigatorTreeC17BroadcastCallbacka"},{"kind":"text","text":"?) "},{"kind":"keyword","text":"throws"}],"abstract":[{"type":"text","text":"Read a tree on disk from a given path."},{"type":"text","text":" "},{"type":"text","text":"The read is atomically performed, which means it reads all the content of the file from the disk and process the tree from loaded data."},{"type":"text","text":" "},{"type":"text","text":"The queue is used to load the data for a given timeout period, after that, the queue is used to schedule another read after a given delay."},{"type":"text","text":" "},{"type":"text","text":"This approach ensures that the used  queue doesn’t stall while loading the content from the disk keeping the used queue responsive."}],"identifier":"doc:\/\/org.swift.SwiftDocC\/documentation\/SwiftDocC\/NavigatorIndex\/readNavigatorTree(timeout:delay:queue:broadcast:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftdocc\/navigatorindex\/readnavigatortree(timeout:delay:queue:broadcast:)"},"doc://org.swift.SwiftDocC/documentation/SwiftDocC":{"role":"collection","title":"SwiftDocC","abstract":[{"type":"text","text":"Combine code comments with markup prose to produce structured, semantic documentation."}],"identifier":"doc:\/\/org.swift.SwiftDocC\/documentation\/SwiftDocC","kind":"symbol","type":"topic","url":"\/documentation\/swiftdocc"},"doc://org.swift.SwiftDocC/documentation/SwiftDocC/NavigatorTree":{"role":"symbol","title":"NavigatorTree","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NavigatorTree"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"NavigatorTree"},{"type":"text","text":" is a class holding information about a tree of data that can be navigated using a tree navigator."}],"identifier":"doc:\/\/org.swift.SwiftDocC\/documentation\/SwiftDocC\/NavigatorTree","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"NavigatorTree"}],"url":"\/documentation\/swiftdocc\/navigatortree"}}}