{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"write"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":" "},{"kind":"internalParam","text":"url"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"URL","preciseIdentifier":"s:10Foundation3URLV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"writePaths"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":" = false, "},{"kind":"externalParam","text":"callback"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","identifier":"doc:\/\/org.swift.SwiftDocC\/documentation\/SwiftDocC\/NavigatorTree\/Node","preciseIdentifier":"s:9SwiftDocC13NavigatorTreeC4NodeC","text":"Node"},{"kind":"text","text":") -> ())? = nil) "},{"kind":"keyword","text":"throws"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"url","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The URL to the file in which the tree gets serialized."}]}]},{"name":"writePaths","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If true, writes the path component to disk."}]}]},{"name":"callback","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A block called each time after a node is written to the disk. If the nodes are N, the block is called N times."}]}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/swiftdocc\/navigatortree\/write(to:writepaths:callback:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/org.swift.SwiftDocC\/documentation\/SwiftDocC\/NavigatorTree\/write(to:writePaths:callback:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Serialize the node and descendants to the disk."},{"type":"text","text":" "},{"type":"text","text":"Every node is written in order using a breath first approach, assigning to each node a virtual identifier in "},{"type":"codeVoice","code":"UInt32"},{"type":"text","text":" which is then used to identify the parent."},{"type":"text","text":" "},{"type":"text","text":"The initial index is 0 and the root gets id 0 and parent id 0, so it can be easily recognized inside the serialized data and it’s expected to be the first element."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"write"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"URL","preciseIdentifier":"s:10Foundation3URLV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"writePaths"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"kind":"externalParam","text":"callback"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Node","preciseIdentifier":"s:9SwiftDocC13NavigatorTreeC4NodeC"},{"kind":"text","text":") -> ())?) "},{"kind":"keyword","text":"throws"}],"title":"write(to:writePaths:callback:)","roleHeading":"Instance Method","role":"symbol","symbolKind":"method","externalID":"s:9SwiftDocC13NavigatorTreeC5write2to0E5Paths8callbacky10Foundation3URLV_SbyAC4NodeCcSgtKF","modules":[{"name":"SwiftDocC"}]},"hierarchy":{"paths":[["doc:\/\/org.swift.SwiftDocC\/documentation\/SwiftDocC","doc:\/\/org.swift.SwiftDocC\/documentation\/SwiftDocC\/DocumentationIndexing","doc:\/\/org.swift.SwiftDocC\/documentation\/SwiftDocC\/NavigatorTree"]]},"references":{"doc://org.swift.SwiftDocC/documentation/SwiftDocC/NavigatorTree/write(to:writePaths:callback:)":{"role":"symbol","title":"write(to:writePaths:callback:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"write"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"URL","preciseIdentifier":"s:10Foundation3URLV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"writePaths"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"kind":"externalParam","text":"callback"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Node","preciseIdentifier":"s:9SwiftDocC13NavigatorTreeC4NodeC"},{"kind":"text","text":") -> ())?) "},{"kind":"keyword","text":"throws"}],"abstract":[{"type":"text","text":"Serialize the node and descendants to the disk."},{"type":"text","text":" "},{"type":"text","text":"Every node is written in order using a breath first approach, assigning to each node a virtual identifier in "},{"type":"codeVoice","code":"UInt32"},{"type":"text","text":" which is then used to identify the parent."},{"type":"text","text":" "},{"type":"text","text":"The initial index is 0 and the root gets id 0 and parent id 0, so it can be easily recognized inside the serialized data and it’s expected to be the first element."}],"identifier":"doc:\/\/org.swift.SwiftDocC\/documentation\/SwiftDocC\/NavigatorTree\/write(to:writePaths:callback:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftdocc\/navigatortree\/write(to:writepaths:callback:)"},"doc://org.swift.SwiftDocC/documentation/SwiftDocC/NavigatorTree":{"role":"symbol","title":"NavigatorTree","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NavigatorTree"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"NavigatorTree"},{"type":"text","text":" is a class holding information about a tree of data that can be navigated using a tree navigator."}],"identifier":"doc:\/\/org.swift.SwiftDocC\/documentation\/SwiftDocC\/NavigatorTree","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"NavigatorTree"}],"url":"\/documentation\/swiftdocc\/navigatortree"},"doc://org.swift.SwiftDocC/documentation/SwiftDocC/NavigatorTree/Node":{"role":"symbol","title":"NavigatorTree.Node","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Node"}],"abstract":[{"type":"text","text":"A representation of a node in the tree wrapping a "},{"type":"codeVoice","code":"NavigatorItem"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"The node holds the reference to children and parent for fast navigation."}],"identifier":"doc:\/\/org.swift.SwiftDocC\/documentation\/SwiftDocC\/NavigatorTree\/Node","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Node"}],"url":"\/documentation\/swiftdocc\/navigatortree\/node"},"doc://org.swift.SwiftDocC/documentation/SwiftDocC":{"role":"collection","title":"SwiftDocC","abstract":[{"type":"text","text":"Combine code comments with markup prose to produce structured, semantic documentation."}],"identifier":"doc:\/\/org.swift.SwiftDocC\/documentation\/SwiftDocC","kind":"symbol","type":"topic","url":"\/documentation\/swiftdocc"},"doc://org.swift.SwiftDocC/documentation/SwiftDocC/DocumentationIndexing":{"role":"collectionGroup","title":"Documentation Indexing","abstract":[{"type":"text","text":"Create documentation indexes optimized for text search or navigation."}],"identifier":"doc:\/\/org.swift.SwiftDocC\/documentation\/SwiftDocC\/DocumentationIndexing","kind":"article","type":"topic","url":"\/documentation\/swiftdocc\/documentationindexing"}}}